Domain SistemaVendasPassagensAereas {
	Subdomain VendaPassagens
	Subdomain GestaoClientes
	Subdomain CheckInBagagem
	Subdomain OperacoesVoo
}

ContextMap {
	contains VendaPassagens
	contains GestaoClientes
	contains CheckInBagagem
	contains OperacoesVoo
	
	VendaPassagens Shared-Kernel GestaoClientes
	VendaPassagens Shared-Kernel CheckInBagagem
	OperacoesVoo Shared-Kernel VendaPassagens
}

BoundedContext VendaPassagens implements VendaPassagens{
	Aggregate Passagem {
		Entity Passagem {
			aggregateRoot

			-PassagemId id
			-VooId voo
			-ClienteId cliente
			-AssentoId assento 
			Date dataCompra
			Float preco
			String classe // Executiva, Econômica
			String status // Ativa, Cancelada, Reembolsada
		}

		ValueObject PassagemId {
			int id
		}
	}
	


	Aggregate Voo {
		Entity Voo {
			aggregateRoot


			String numero
			-VooId id
			String origem
			String destino
			-List<Escala> escalas 
			Date horarioPartida
			Date horarioChegada
			String status // Confirmado, Atrasado, Cancelado
		}

		ValueObject VooId {
			int id
		}

		ValueObject Escala {
			String aeroporto
			Date horarioPartida
			Date horarioChegada
		}
	}

	Aggregate Assento {
		Entity Assento {
			aggregateRoot

			-AssentoId id
			String numero
			boolean disponivel
		}

		ValueObject AssentoId {
			String numero
		}
	}
	
	Aggregate Reembolso {
		Entity Reembolso {
			aggregateRoot

			-ReembolsoId id
			-ClienteId cliente
			-PassagemId passagem
			Float valor
			String metodo // Crédito na conta
			Date dataRecebimento
		}

		ValueObject ReembolsoId {
			int id
		}
	}

	Aggregate CupomDesconto {
		Entity Cupom {
			aggregateRoot

			-CupomId id
			Float valorDesconto
			Date validade
			boolean usado
		}

		ValueObject CupomId {
			String codigo
		}
	}
}

BoundedContext GestaoClientes implements GestaoClientes {
	
	
	Aggregate Cliente {
		Entity Cliente {
			aggregateRoot

			-ClienteId id
			String nome
			String cpf
			String client_email
			-Fidelidade fidelidade
		}

		ValueObject ClienteId {
			int id
		}

		ValueObject Fidelidade {
			String nomePrograma
			String nivel // Bronze, Prata, Ouro
			Float pontosAcumulados
		}
	}

	Aggregate Credito {
		Entity Credito {
			aggregateRoot

			-CreditoId id
			-ClienteId cliente
			Float saldo
		}

		ValueObject CreditoId {
			int id
		}
	}
	

}



BoundedContext CheckInBagagem implements CheckInBagagem{
	Aggregate CheckIn {
		Entity CheckIn {
			aggregateRoot

			-CheckInId id
			-PassagemId passagem
			-AssentoId assento nullable
			Date dataCheckIn
			-Bagagem bagagem nullable
		}

		ValueObject CheckInId {
			int id
		}

		ValueObject Bagagem {
			Float volume
			int quantidadePermitida
			Float taxaExcesso nullable
		}
	}
}

BoundedContext OperacoesVoo implements OperacoesVoo {
	Aggregate MudancaVoo {
		Entity MudancaVoo {
			aggregateRoot

			-MudancaVooId id
			-PassagemId passagemOriginal
			-VooId novoVoo
			Float taxaMudanca
		}

		ValueObject MudancaVooId {
			int id
		}
	}
}
